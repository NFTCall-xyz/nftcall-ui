/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers'

import type { PromiseOrValue } from '../../../common'
import type {
  NFTOracleTestUpgrade,
  NFTOracleTestUpgradeInterface,
} from '../../../contracts/mocked/NFTOracleTestUpgrade'

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'oldOperator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOperator',
        type: 'address',
      },
    ],
    name: 'ChangeOperator',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'indexes',
        type: 'uint256[]',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'price',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'vol',
            type: 'uint16',
          },
          {
            internalType: 'uint256',
            name: 'index',
            type: 'uint256',
          },
        ],
        indexed: false,
        internalType: 'struct NFTOracleTestUpgrade.UpdateInput[][]',
        name: 'inputs',
        type: 'tuple[][]',
      },
    ],
    name: 'SetAssetData',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'admin',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    name: 'SetEmergencyAdmin',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [] as any,
    name: 'ORACLE_REVISION',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'assets',
        type: 'address[]',
      },
    ],
    name: 'addAssets',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'indexes',
        type: 'uint256[]',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'price',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'vol',
            type: 'uint16',
          },
          {
            internalType: 'uint256',
            name: 'index',
            type: 'uint256',
          },
        ],
        internalType: 'struct NFTOracleTestUpgrade.UpdateInput[][]',
        name: 'inputs',
        type: 'tuple[][]',
      },
    ],
    name: 'batchSetAssetPrice',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'getAddressList',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'getAsset',
    outputs: [
      {
        internalType: 'uint256',
        name: 'price',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vol',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'getAssetPrice',
    outputs: [
      {
        internalType: 'uint256',
        name: 'price',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'getAssetVol',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vol',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'assets',
        type: 'address[]',
      },
    ],
    name: 'getAssets',
    outputs: [
      {
        internalType: 'uint256[2][]',
        name: 'prices',
        type: 'uint256[2][]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'getIndexes',
    outputs: [
      {
        internalType: 'uint256',
        name: 'OuterIndex',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'InnerIndex',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'newOperator',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: 'assets',
        type: 'address[]',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'admin',
        type: 'address',
      },
    ],
    name: 'isEmergencyAdmin',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'operator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'admin',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    name: 'setEmergencyAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOperator',
        type: 'address',
      },
    ],
    name: 'setOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'val',
        type: 'bool',
      },
    ],
    name: 'setPause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x60806040526000805534801561001457600080fd5b5061001e33610030565b6034805460ff60a01b19169055610082565b603480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6117d5806100916000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806381119130116100ad578063b3596f0711610071578063b3596f071461027f578063b3ab15fb14610292578063bedb86fb146102a5578063d91a2683146102b8578063f2fde38b146102d857600080fd5b8063811191301461021c5780638da5cb5b14610231578063942acc9814610242578063996f514414610263578063aea321c61461026c57600080fd5b8063570ca735116100f4578063570ca735146101b75780635c975abb146101dc578063715018a6146101ee578063762fb689146101f657806377a24f361461020957600080fd5b80632500f2b61461012657806330b8b2c6146101675780634d0503d41461018f5780634fdd1d4f146101a4575b600080fd5b610152610134366004611147565b6001600160a01b031660009081526036602052604090205460ff1690565b60405190151581526020015b60405180910390f35b61017a610175366004611147565b6102eb565b6040805192835260208301919091520161015e565b6101a261019d366004611172565b610301565b005b6101a26101b236600461136b565b6103c3565b6038546001600160a01b03165b6040516001600160a01b03909116815260200161015e565b603454600160a01b900460ff16610152565b6101a261051c565b61017a610204366004611147565b610530565b6101a2610217366004611486565b610588565b61022461066f565b60405161015e91906114e4565b6034546001600160a01b03166101c4565b610255610250366004611147565b6106d1565b60405190815260200161015e565b61025561010081565b6101a261027a366004611531565b6106e3565b61025561028d366004611147565b610705565b6101a26102a0366004611147565b610717565b6101a26102b336600461156e565b6107c7565b6102cb6102c6366004611531565b610850565b60405161015e9190611589565b6101a26102e6366004611147565b610926565b6000806102f78361099c565b9094909350915050565b6103096109d4565b6001600160a01b0382166103645760405162461bcd60e51b815260206004820152601860248201527f4e46544f7261636c653a20696e76616c69642061646d696e000000000000000060448201526064015b60405180910390fd5b6001600160a01b038216600081815260366020908152604091829020805460ff191685151590811790915591519182527fd31e6f3e4ff12681638f56ab4792e32b335f90235a708d31e741ee9dac011e91910160405180910390a25050565b6103cb610a2e565b6038546001600160a01b031633146104335760405162461bcd60e51b815260206004820152602560248201527f4e46544f7261636c653a2063616c6c6572206973206e6f7420746865206f70656044820152643930ba37b960d91b606482015260840161035b565b80518251146104845760405162461bcd60e51b815260206004820152601f60248201527f4e46544f7261636c653a206c656e677468206d75737420626520657175616c00604482015260640161035b565b60005b82518110156104de576104cc8382815181106104a5576104a56115f2565b60200260200101518383815181106104bf576104bf6115f2565b6020026020010151610a7b565b806104d68161161e565b915050610487565b507f1c66d38ae9bc7add98b6cd4a391e70e47c85b044e97db2074c7bde3849dd329e8282604051610510929190611639565b60405180910390a15050565b6105246109d4565b61052e6000610d8c565b565b6001600160a01b0381166000908152603560205260408120548190816008610559600184611713565b6105639190611740565b90506000610572600884611754565b90508061057d575060085b909590945092505050565b6001546101009060ff168061059c5750303b155b806105a8575060005481115b61060b5760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b606482015260840161035b565b60015460ff1615801561062a576001805460ff19168117905560008290555b603880546001600160a01b0319166001600160a01b03861617905561064e85610d8c565b61065783610dde565b8015610668576001805460ff191690555b5050505050565b606060378054806020026020016040519081016040528092919081815260200182805480156106c757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116106a9575b5050505050905090565b60006106dc8261099c565b9392505050565b6106eb6109d4565b60008151116106f957600080fd5b61070281610dde565b50565b60006107108261099c565b5092915050565b61071f6109d4565b6001600160a01b0381166107755760405162461bcd60e51b815260206004820152601b60248201527f4e46544f7261636c653a20696e76616c6964206f70657261746f720000000000604482015260640161035b565b603880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f43ecbc1bb0a9bebbcadca5bdaedc649040adb65597772899e25403afb28b679490600090a35050565b3360009081526036602052604090205460ff1661083a5760405162461bcd60e51b815260206004820152602b60248201527f4e46544f7261636c653a2063616c6c6572206973206e6f742074686520656d6560448201526a3933b2b731bca0b236b4b760a91b606482015260840161035b565b801561084857610702610ec9565b610702610f29565b60606000825167ffffffffffffffff81111561086e5761086e6111a5565b6040519080825280602002602001820160405280156108a757816020015b61089461110d565b81526020019060019003908161088c5790505b50905060005b8351811015610710576000806108db8684815181106108ce576108ce6115f2565b602002602001015161099c565b91509150604051806040016040528083815260200182815250848481518110610906576109066115f2565b60200260200101819052505050808061091e9061161e565b9150506108ad565b61092e6109d4565b6001600160a01b0381166109935760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161035b565b61070281610d8c565b6000806000806109ab85610f65565b90925090506109c561ffff8316662386f26fc10000611768565b9561ffff909116945092505050565b6034546001600160a01b0316331461052e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161035b565b603454600160a01b900460ff161561052e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161035b565b600060398360328110610a9057610a906115f2565b01905060005b8251811015610c45576000838281518110610ab357610ab36115f2565b602002602001015190506000816040015190506000610ae98360000151846020015161ffff1660109190911b63ffff0000161790565b90508160011415610b0c57845463ffffffff191663ffffffff8216178555610c2f565b8160021415610b3857845467ffffffff00000000191664010000000063ffffffff831602178555610c2f565b8160031415610b6257845463ffffffff60401b1916600160401b63ffffffff831602178555610c2f565b8160041415610b8c57845463ffffffff60601b1916600160601b63ffffffff831602178555610c2f565b8160051415610bb657845463ffffffff60801b1916600160801b63ffffffff831602178555610c2f565b8160061415610be057845463ffffffff60a01b1916600160a01b63ffffffff831602178555610c2f565b8160071415610c0a57845463ffffffff60c01b1916600160c01b63ffffffff831602178555610c2f565b8160081415610c2f5784546001600160e01b0316600160e01b63ffffffff8316021785555b5050508080610c3d9061161e565b915050610a96565b508060398460328110610c5a57610c5a6115f2565b82549101805463ffffffff19811663ffffffff938416908117835584546401000000009081900485160267ffffffffffffffff1990921617178082558354600160401b9081900484160263ffffffff60401b198216811783558454600160601b9081900485160263ffffffff60601b199091166fffffffffffffffff00000000000000001990921691909117178082558354600160801b9081900484160263ffffffff60801b198216811783558454600160a01b9081900485160263ffffffff60a01b1990911667ffffffffffffffff60801b1990921691909117178082558354600160c01b9081900484160263ffffffff60c01b198216811783559354600160e01b908190049093169092026001600160e01b039093166001600160c01b0390921691909117919091179055505050565b603480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b603754600090610def906001611787565b905060005b8251811015610ec4576000838281518110610e1157610e116115f2565b6020026020010151905060356000826001600160a01b03166001600160a01b031681526020019081526020016000205460001415610eb1576001600160a01b03811660008181526035602052604081208590556037805460018101825591527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae0180546001600160a01b031916909117905582610ead8161161e565b9350505b5080610ebc8161161e565b915050610df4565b505050565b610ed1610a2e565b6034805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f0c3390565b6040516001600160a01b03909116815260200160405180910390a1565b610f316110bd565b6034805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33610f0c565b600080600080610f7485610530565b91509150600060398360328110610f8d57610f8d6115f2565b6040805161010081018252929091015463ffffffff8082168452640100000000820481166020850152600160401b8204811692840192909252600160601b810482166060840152600160801b810482166080840152600160a01b8104821660a0840152600160c01b8104821660c0840152600160e01b90041660e0820152905060006001831415611020575080516110a8565b8260021415611034575060208101516110a8565b8260031415611048575060408101516110a8565b826004141561105c575060608101516110a8565b8260051415611070575060808101516110a8565b8260061415611084575060a08101516110a8565b8260071415611098575060c08101516110a8565b82600814156110a8575060e08101515b61ffff601082901c1697909650945050505050565b603454600160a01b900460ff1661052e5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161035b565b60405180604001604052806002906020820280368337509192915050565b80356001600160a01b038116811461114257600080fd5b919050565b60006020828403121561115957600080fd5b6106dc8261112b565b8035801515811461114257600080fd5b6000806040838503121561118557600080fd5b61118e8361112b565b915061119c60208401611162565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156111de576111de6111a5565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561120d5761120d6111a5565b604052919050565b600067ffffffffffffffff82111561122f5761122f6111a5565b5060051b60200190565b803561ffff8116811461114257600080fd5b600082601f83011261125c57600080fd5b8135602061127161126c83611215565b6111e4565b82815260059290921b8401810191818101908684111561129057600080fd5b8286015b8481101561136057803567ffffffffffffffff8111156112b45760008081fd5b8701603f810189136112c65760008081fd5b8481013560406112d861126c83611215565b8281526060928302840182019288820191908d8511156112f85760008081fd5b948301945b8486101561134e5780868f0312156113155760008081fd5b61131d6111bb565b61132687611239565b81526113338b8801611239565b818c01528685013585820152835294850194918901916112fd565b50875250505092840192508301611294565b509695505050505050565b6000806040838503121561137e57600080fd5b823567ffffffffffffffff8082111561139657600080fd5b818501915085601f8301126113aa57600080fd5b813560206113ba61126c83611215565b82815260059290921b840181019181810190898411156113d957600080fd5b948201945b838610156113f7578535825294820194908201906113de565b9650508601359250508082111561140d57600080fd5b5061141a8582860161124b565b9150509250929050565b600082601f83011261143557600080fd5b8135602061144561126c83611215565b82815260059290921b8401810191818101908684111561146457600080fd5b8286015b84811015611360576114798161112b565b8352918301918301611468565b60008060006060848603121561149b57600080fd5b6114a48461112b565b92506114b26020850161112b565b9150604084013567ffffffffffffffff8111156114ce57600080fd5b6114da86828701611424565b9150509250925092565b6020808252825182820181905260009190848201906040850190845b818110156115255783516001600160a01b031683529284019291840191600101611500565b50909695505050505050565b60006020828403121561154357600080fd5b813567ffffffffffffffff81111561155a57600080fd5b61156684828501611424565b949350505050565b60006020828403121561158057600080fd5b6106dc82611162565b60208082528251828201819052600091906040908185019086840185805b838110156115e457825185835b60028110156115d1578251825291890191908901906001016115b4565b50505093850193918601916001016115a7565b509298975050505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561163257611632611608565b5060010190565b6040808252835182820181905260009190606090818501906020808901865b8381101561167457815185529382019390820190600101611658565b50508683038188015287518084528184019250600581901b8401820189830160005b8381101561170257868303601f1901865281518051808552908601908685019060005b818110156116ed578351805161ffff90811685528a820151168a8501528d01518d84015292880192918b01916001016116b9565b50509686019693505090840190600101611696565b50909b9a5050505050505050505050565b60008282101561172557611725611608565b500390565b634e487b7160e01b600052601260045260246000fd5b60008261174f5761174f61172a565b500490565b6000826117635761176361172a565b500690565b600081600019048311821515161561178257611782611608565b500290565b6000821982111561179a5761179a611608565b50019056fea2646970667358221220f2680abe52e22c44ea02deed35a7268b2223e353ad8f0183502f2549770a86ea64736f6c63430008090033'

type NFTOracleTestUpgradeConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: NFTOracleTestUpgradeConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1

export class NFTOracleTestUpgrade__factory extends ContractFactory {
  constructor(...args: NFTOracleTestUpgradeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<NFTOracleTestUpgrade> {
    return super.deploy(overrides || {}) as Promise<NFTOracleTestUpgrade>
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): NFTOracleTestUpgrade {
    return super.attach(address) as NFTOracleTestUpgrade
  }
  override connect(signer: Signer): NFTOracleTestUpgrade__factory {
    return super.connect(signer) as NFTOracleTestUpgrade__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): NFTOracleTestUpgradeInterface {
    return new utils.Interface(_abi) as NFTOracleTestUpgradeInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFTOracleTestUpgrade {
    return new Contract(address, _abi, signerOrProvider) as NFTOracleTestUpgrade
  }
}
