/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers'

import type { PromiseOrValue } from '../../common'
import type { CallToken, CallTokenInterface } from '../../contracts/CallToken'

const _abi = [
  {
    inputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'approved',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'ApprovalForAll',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Burn',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Mint',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'burn',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'getApproved',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'isApprovedForAll',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'mint',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'nft',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'user',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'open',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'ownerOf',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'renounceOwnership',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'safeTransferFrom',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'approved',
        type: 'bool',
      },
    ],
    name: 'setApprovalForAll',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'tokenByIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x60a06040523480156200001157600080fd5b50604080518082018252600981526821b0b6362a37b5b2b760b91b60208083019182528351808501909452600284526110d560f21b9084015281519192916200005d9160009162000172565b5080516200007390600190602084019062000172565b505050620000906200008a6200011c60201b60201c565b62000120565b336001600160a01b031663890357306040518163ffffffff1660e01b815260040160c06040518083038186803b158015620000ca57600080fd5b505afa158015620000df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000105919062000235565b505050506001600160a01b031660805250620002f3565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200018090620002b6565b90600052602060002090601f016020900481019282620001a45760008555620001ef565b82601f10620001bf57805160ff1916838001178555620001ef565b82800160010185558215620001ef579182015b82811115620001ef578251825591602001919060010190620001d2565b50620001fd92915062000201565b5090565b5b80821115620001fd576000815560010162000202565b80516001600160a01b03811681146200023057600080fd5b919050565b60008060008060008060c087890312156200024f57600080fd5b6200025a8762000218565b95506200026a6020880162000218565b94506200027a6040880162000218565b93506200028a6060880162000218565b92506200029a6080880162000218565b9150620002aa60a0880162000218565b90509295509295509295565b600181811c90821680620002cb57607f821691505b60208210811415620002ed57634e487b7160e01b600052602260045260246000fd5b50919050565b6080516120fe620003246000396000818161025c0152818161039701528181610d960152610f2401526120fe6000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806347ccca02116100c357806395d89b411161007c57806395d89b41146102d0578063a22cb465146102d8578063b88d4fde146102eb578063c87b56dd146102fe578063e985e9c514610311578063f2fde38b1461034d57600080fd5b806347ccca02146102575780634f6ccce71461027e5780636352211e1461029157806370a08231146102a4578063715018a6146102b75780638da5cb5b146102bf57600080fd5b806318160ddd1161011557806318160ddd146101e257806323b872dd146101f85780632f745c591461020b57806340c10f191461021e57806342842e0e1461023157806342966c681461024457600080fd5b806301ffc9a71461015257806306fdde031461017a578063081812fc1461018f578063095ea7b3146101ba5780630a0e5c9d146101cf575b600080fd5b610165610160366004611b14565b610360565b60405190151581526020015b60405180910390f35b61018261038b565b6040516101719190611b90565b6101a261019d366004611ba3565b61044f565b6040516001600160a01b039091168152602001610171565b6101cd6101c8366004611bd8565b610476565b005b6101cd6101dd366004611bd8565b610591565b6101ea6105b0565b604051908152602001610171565b6101cd610206366004611c02565b61069e565b6101ea610219366004611bd8565b610762565b6101cd61022c366004611bd8565b610903565b6101cd61023f366004611c02565b61094f565b6101cd610252366004611ba3565b610a0d565b6101a27f000000000000000000000000000000000000000000000000000000000000000081565b6101ea61028c366004611ba3565b610a65565b6101a261029f366004611ba3565b610bba565b6101ea6102b2366004611c3e565b610c73565b6101cd610d76565b6006546001600160a01b03166101a2565b610182610d8a565b6101cd6102e6366004611c59565b610e3a565b6101cd6102f9366004611d04565b610e45565b61018261030c366004611ba3565b610f0b565b61016561031f366004611daf565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101cd61035b366004611c3e565b610faa565b60006001600160e01b0319821663780e9d6360e01b1480610385575061038582611023565b92915050565b6060610395611073565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156103ee57600080fd5b505afa158015610402573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261042a9190810190611de2565b60405160200161043b929190611e59565b604051602081830303815290604052905090565b600061045a82611105565b506000908152600460205260409020546001600160a01b031690565b600061048182611164565b9050806001600160a01b0316836001600160a01b031614156104f45760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806105105750610510813361031f565b6105825760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c000060648201526084016104eb565b61058c83836111c4565b505050565b610599611232565b6105ac6105a582611164565b838361128c565b5050565b60008042815b600754811015610696576000600782815481106105d5576105d5611e95565b906000526020600020015490506105f46006546001600160a01b031690565b6001600160a01b0316639067b677826040518263ffffffff1660e01b815260040161062191815260200190565b60206040518083038186803b15801561063957600080fd5b505afa15801561064d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106719190611eab565b831161068557610682600185611eda565b93505b5061068f81611ef2565b90506105b6565b509092915050565b60006106b26006546001600160a01b031690565b6001600160a01b0316639067b677836040518263ffffffff1660e01b81526004016106df91815260200190565b60206040518083038186803b1580156106f757600080fd5b505afa15801561070b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072f9190611eab565b9050804211156107515760405162461bcd60e51b81526004016104eb90611f0d565b61075c848484611433565b50505050565b60075460009082106107b25760405162461bcd60e51b81526020600482015260196024820152786f776e657220696e646578206f7574206f6620626f756e647360381b60448201526064016104eb565b426000805b6007548110156108be576000600782815481106107d6576107d6611e95565b90600052602060002001549050866001600160a01b03166107f682611164565b6001600160a01b03161480156108875750600654604051639067b67760e01b8152600481018390526001600160a01b0390911690639067b6779060240160206040518083038186803b15801561084b57600080fd5b505afa15801561085f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108839190611eab565b8411155b156108ad578583141561089f57935061038592505050565b6108aa600184611eda565b92505b506108b781611ef2565b90506107b7565b5060405162461bcd60e51b81526020600482015260196024820152786f776e657220696e646578206f7574206f6620626f756e647360381b60448201526064016104eb565b61090b611232565b6109158282611464565b60405181906001600160a01b038416907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688590600090a35050565b60006109636006546001600160a01b031690565b6001600160a01b0316639067b677836040518263ffffffff1660e01b815260040161099091815260200190565b60206040518083038186803b1580156109a857600080fd5b505afa1580156109bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e09190611eab565b905080421115610a025760405162461bcd60e51b81526004016104eb90611f0d565b61075c84848461147e565b610a15611232565b6000610a2082611164565b9050610a2b82611499565b60405182906001600160a01b038316907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca590600090a35050565b60008042815b600754811015610b5c57600060078281548110610a8a57610a8a611e95565b90600052602060002001549050610aa96006546001600160a01b031690565b6001600160a01b0316639067b677826040518263ffffffff1660e01b8152600401610ad691815260200190565b60206040518083038186803b158015610aee57600080fd5b505afa158015610b02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b269190611eab565b8311610b4b5785841415610b3d5795945050505050565b610b48600185611eda565b93505b50610b5581611ef2565b9050610a6b565b5060405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016104eb565b6000610bce6006546001600160a01b031690565b6001600160a01b0316639067b677836040518263ffffffff1660e01b8152600401610bfb91815260200190565b60206040518083038186803b158015610c1357600080fd5b505afa158015610c27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4b9190611eab565b421115610c6a5760405162461bcd60e51b81526004016104eb90611f0d565b61038582611164565b60008042815b600754811015610d6d57600060078281548110610c9857610c98611e95565b90600052602060002001549050856001600160a01b0316610cb882611164565b6001600160a01b0316148015610d495750600654604051639067b67760e01b8152600481018390526001600160a01b0390911690639067b6779060240160206040518083038186803b158015610d0d57600080fd5b505afa158015610d21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d459190611eab565b8311155b15610d5c57610d59600185611eda565b93505b50610d6681611ef2565b9050610c79565b50909392505050565b610d7e611232565b610d886000611540565b565b6060610d94611592565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610ded57600080fd5b505afa158015610e01573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e299190810190611de2565b60405160200161043b929190611f37565b6105ac3383836115a1565b6000610e596006546001600160a01b031690565b6001600160a01b0316639067b677846040518263ffffffff1660e01b8152600401610e8691815260200190565b60206040518083038186803b158015610e9e57600080fd5b505afa158015610eb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed69190611eab565b905080421115610ef85760405162461bcd60e51b81526004016104eb90611f0d565b610f0485858585611670565b5050505050565b60405163c87b56dd60e01b8152600481018290526060907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c87b56dd9060240160006040518083038186803b158015610f6e57600080fd5b505afa158015610f82573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103859190810190611de2565b610fb2611232565b6001600160a01b0381166110175760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104eb565b61102081611540565b50565b60006001600160e01b031982166380ac58cd60e01b148061105457506001600160e01b03198216635b5e139f60e01b145b8061038557506301ffc9a760e01b6001600160e01b0319831614610385565b60606000805461108290611f66565b80601f01602080910402602001604051908101604052809291908181526020018280546110ae90611f66565b80156110fb5780601f106110d0576101008083540402835291602001916110fb565b820191906000526020600020905b8154815290600101906020018083116110de57829003601f168201915b5050505050905090565b6000818152600260205260409020546001600160a01b03166110205760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104eb565b6000818152600260205260408120546001600160a01b0316806103855760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104eb565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906111f982611164565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6006546001600160a01b03163314610d885760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104eb565b826001600160a01b031661129f82611164565b6001600160a01b0316146113035760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016104eb565b6001600160a01b0382166113655760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104eb565b6113708383836116a2565b61137b6000826111c4565b6001600160a01b03831660009081526003602052604081208054600192906113a4908490611fa1565b90915550506001600160a01b03821660009081526003602052604081208054600192906113d2908490611eda565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61143d338261170f565b6114595760405162461bcd60e51b81526004016104eb90611fb8565b61058c83838361128c565b6105ac82826040518060200160405280600081525061178e565b61058c83838360405180602001604052806000815250610e45565b60006114a482611164565b90506114b2816000846116a2565b6114bd6000836111c4565b6001600160a01b03811660009081526003602052604081208054600192906114e6908490611fa1565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606001805461108290611f66565b816001600160a01b0316836001600160a01b031614156116035760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104eb565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61167a338361170f565b6116965760405162461bcd60e51b81526004016104eb90611fb8565b61075c848484846117c1565b6001600160a01b0383166116f8576116f881600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b6001600160a01b03821661058c5761058c816117f4565b60008061171b83611164565b9050806001600160a01b0316846001600160a01b0316148061176257506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806117865750836001600160a01b031661177b8461044f565b6001600160a01b0316145b949350505050565b61179883836118a3565b6117a560008484846119f1565b61058c5760405162461bcd60e51b81526004016104eb90612006565b6117cc84848461128c565b6117d8848484846119f1565b61075c5760405162461bcd60e51b81526004016104eb90612006565b60075460009061180690600190611fa1565b6000838152600860205260408120546007805493945090928490811061182e5761182e611e95565b90600052602060002001549050806007838154811061184f5761184f611e95565b600091825260208083209091019290925582815260089091526040808220849055858252812055600780548061188757611887612058565b6001900381819060005260206000200160009055905550505050565b6001600160a01b0382166118f95760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104eb565b6000818152600260205260409020546001600160a01b03161561195e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104eb565b61196a600083836116a2565b6001600160a01b0382166000908152600360205260408120805460019290611993908490611eda565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b15611af357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611a3590339089908890889060040161206e565b602060405180830381600087803b158015611a4f57600080fd5b505af1925050508015611a7f575060408051601f3d908101601f19168201909252611a7c918101906120ab565b60015b611ad9573d808015611aad576040519150601f19603f3d011682016040523d82523d6000602084013e611ab2565b606091505b508051611ad15760405162461bcd60e51b81526004016104eb90612006565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611786565b506001949350505050565b6001600160e01b03198116811461102057600080fd5b600060208284031215611b2657600080fd5b8135611b3181611afe565b9392505050565b60005b83811015611b53578181015183820152602001611b3b565b8381111561075c5750506000910152565b60008151808452611b7c816020860160208601611b38565b601f01601f19169290920160200192915050565b602081526000611b316020830184611b64565b600060208284031215611bb557600080fd5b5035919050565b80356001600160a01b0381168114611bd357600080fd5b919050565b60008060408385031215611beb57600080fd5b611bf483611bbc565b946020939093013593505050565b600080600060608486031215611c1757600080fd5b611c2084611bbc565b9250611c2e60208501611bbc565b9150604084013590509250925092565b600060208284031215611c5057600080fd5b611b3182611bbc565b60008060408385031215611c6c57600080fd5b611c7583611bbc565b915060208301358015158114611c8a57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611cd457611cd4611c95565b604052919050565b600067ffffffffffffffff821115611cf657611cf6611c95565b50601f01601f191660200190565b60008060008060808587031215611d1a57600080fd5b611d2385611bbc565b9350611d3160208601611bbc565b925060408501359150606085013567ffffffffffffffff811115611d5457600080fd5b8501601f81018713611d6557600080fd5b8035611d78611d7382611cdc565b611cab565b818152886020838501011115611d8d57600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b60008060408385031215611dc257600080fd5b611dcb83611bbc565b9150611dd960208401611bbc565b90509250929050565b600060208284031215611df457600080fd5b815167ffffffffffffffff811115611e0b57600080fd5b8201601f81018413611e1c57600080fd5b8051611e2a611d7382611cdc565b818152856020838501011115611e3f57600080fd5b611e50826020830160208601611b38565b95945050505050565b60008351611e6b818460208801611b38565b600160fd1b9083019081528351611e89816001840160208801611b38565b01600101949350505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611ebd57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611eed57611eed611ec4565b500190565b6000600019821415611f0657611f06611ec4565b5060010190565b60208082526010908201526f1d1bdad95b881a5cc8195e1c1a5c995960821b604082015260600190565b60008351611f49818460208801611b38565b835190830190611f5d818360208801611b38565b01949350505050565b600181811c90821680611f7a57607f821691505b60208210811415611f9b57634e487b7160e01b600052602260045260246000fd5b50919050565b600082821015611fb357611fb3611ec4565b500390565b6020808252602e908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526d1c881b9bdc88185c1c1c9bdd995960921b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052603160045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906120a190830184611b64565b9695505050505050565b6000602082840312156120bd57600080fd5b8151611b3181611afe56fea2646970667358221220383c54a3f70c7a85131e3b938ec6dbba8ab8adb4fa1e7474d125b075a135733f64736f6c63430008090033'

type CallTokenConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: CallTokenConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1

export class CallToken__factory extends ContractFactory {
  constructor(...args: CallTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<CallToken> {
    return super.deploy(overrides || {}) as Promise<CallToken>
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): CallToken {
    return super.attach(address) as CallToken
  }
  override connect(signer: Signer): CallToken__factory {
    return super.connect(signer) as CallToken__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): CallTokenInterface {
    return new utils.Interface(_abi) as CallTokenInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CallToken {
    return new Contract(address, _abi, signerOrProvider) as CallToken
  }
}
