/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type { ICallPoolDeployer, ICallPoolDeployerInterface } from '../../../contracts/interfaces/ICallPoolDeployer'

const _abi = [
  {
    inputs: [],
    name: 'parameters',
    outputs: [
      {
        internalType: 'address',
        name: 'factory',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'erc721token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'ntoken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'calltoken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracle',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'premium',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
]

export class ICallPoolDeployer__factory {
  static readonly abi = _abi
  static createInterface(): ICallPoolDeployerInterface {
    return new utils.Interface(_abi) as ICallPoolDeployerInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ICallPoolDeployer {
    return new Contract(address, _abi, signerOrProvider) as ICallPoolDeployer
  }
}
