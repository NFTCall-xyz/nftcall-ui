/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider } from '@ethersproject/providers'
import { Contract, Signer, utils } from 'ethers'

import type {
  ICallPoolActions,
  ICallPoolActionsInterface,
} from '../../../../contracts/interfaces/pool/ICallPoolActions'

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: 'lowerStrikePriceGapIdx',
        type: 'uint8',
      },
      {
        internalType: 'uint8',
        name: 'upperDurationIdx',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'minimumStrikePrice',
        type: 'uint256',
      },
    ],
    name: 'changePreference',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'tokenId',
        type: 'uint256[]',
      },
      {
        internalType: 'uint8[]',
        name: 'lowerStrikePriceGapIdxList',
        type: 'uint8[]',
      },
      {
        internalType: 'uint8[]',
        name: 'upperDurationIdxList',
        type: 'uint8[]',
      },
      {
        internalType: 'uint256[]',
        name: 'minimumStrikePriceList',
        type: 'uint256[]',
      },
    ],
    name: 'changePreferenceBatch',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'errorCodes',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'onBehalfOf',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'deposit',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'onBehalfOf',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'tokenIds',
        type: 'uint256[]',
      },
    ],
    name: 'depositBatch',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'errorCodes',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'onBehalfOf',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: 'lowerStrikePriceGapIdx',
        type: 'uint8',
      },
      {
        internalType: 'uint8',
        name: 'upperDurationIdx',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'minimumStrikePrice',
        type: 'uint256',
      },
    ],
    name: 'depositWithPreference',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'onBehalfOf',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'tokenIds',
        type: 'uint256[]',
      },
      {
        internalType: 'uint8[]',
        name: 'lowerStrikePriceGapIdxList',
        type: 'uint8[]',
      },
      {
        internalType: 'uint8[]',
        name: 'upperDurationIdxList',
        type: 'uint8[]',
      },
      {
        internalType: 'uint256[]',
        name: 'minimumStrikePriceList',
        type: 'uint256[]',
      },
    ],
    name: 'depositWithPreferenceBatch',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'errorCodes',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'exerciseCall',
    outputs: [] as any,
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'tokenIds',
        type: 'uint256[]',
      },
    ],
    name: 'exerciseCallBatch',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'errorCodes',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: 'strikePriceIdx',
        type: 'uint8',
      },
      {
        internalType: 'uint8',
        name: 'durationIdx',
        type: 'uint8',
      },
    ],
    name: 'openCall',
    outputs: [] as any,
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'tokenIds',
        type: 'uint256[]',
      },
      {
        internalType: 'uint8[]',
        name: 'strikePrices',
        type: 'uint8[]',
      },
      {
        internalType: 'uint8[]',
        name: 'durations',
        type: 'uint8[]',
      },
    ],
    name: 'openCallBatch',
    outputs: [] as any,
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'relistNFT',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'tokenIds',
        type: 'uint256[]',
      },
    ],
    name: 'relistNFTBatch',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'errorCodes',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'takeNFTOffMarket',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'tokenIds',
        type: 'uint256[]',
      },
    ],
    name: 'takeNFTOffMarketBatch',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'errorCodes',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256[]',
        name: 'tokenIds',
        type: 'uint256[]',
      },
    ],
    name: 'withdrawBatch',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'errorCodes',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'withdrawETH',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

export class ICallPoolActions__factory {
  static readonly abi = _abi
  static createInterface(): ICallPoolActionsInterface {
    return new utils.Interface(_abi) as ICallPoolActionsInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ICallPoolActions {
    return new Contract(address, _abi, signerOrProvider) as ICallPoolActions
  }
}
