/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider } from '@ethersproject/providers'
import { Contract, Signer, utils } from 'ethers'

import type { CallPoolDeployer, CallPoolDeployerInterface } from '../../contracts/CallPoolDeployer'

const _abi = [
  {
    inputs: [] as any,
    name: 'parameters',
    outputs: [
      {
        internalType: 'address',
        name: 'factory',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'erc721token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'ntoken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'calltoken',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'oracle',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'premium',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
]

export class CallPoolDeployer__factory {
  static readonly abi = _abi
  static createInterface(): CallPoolDeployerInterface {
    return new utils.Interface(_abi) as CallPoolDeployerInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CallPoolDeployer {
    return new Contract(address, _abi, signerOrProvider) as CallPoolDeployer
  }
}
