/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { PromiseOrValue } from '../../common'
import type { NFTOracle, NFTOracleInterface } from '../../contracts/NFTOracle'

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'oldOperator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOperator',
        type: 'address',
      },
    ],
    name: 'ChangeOperator',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'indexes',
        type: 'uint256[]',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'price',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'vol',
            type: 'uint16',
          },
          {
            internalType: 'uint256',
            name: 'index',
            type: 'uint256',
          },
        ],
        indexed: false,
        internalType: 'struct NFTOracle.UpdateInput[][]',
        name: 'inputs',
        type: 'tuple[][]',
      },
    ],
    name: 'SetAssetData',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'admin',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    name: 'SetEmergencyAdmin',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [],
    name: 'ORACLE_REVISION',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'assets',
        type: 'address[]',
      },
    ],
    name: 'addAssets',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'indexes',
        type: 'uint256[]',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'price',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'vol',
            type: 'uint16',
          },
          {
            internalType: 'uint256',
            name: 'index',
            type: 'uint256',
          },
        ],
        internalType: 'struct NFTOracle.UpdateInput[][]',
        name: 'inputs',
        type: 'tuple[][]',
      },
    ],
    name: 'batchSetAssetPrice',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAddressList',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'getAsset',
    outputs: [
      {
        internalType: 'uint256',
        name: 'price',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vol',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'getAssetPrice',
    outputs: [
      {
        internalType: 'uint256',
        name: 'price',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'getAssetVol',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vol',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'assets',
        type: 'address[]',
      },
    ],
    name: 'getAssets',
    outputs: [
      {
        internalType: 'uint256[2][]',
        name: 'prices',
        type: 'uint256[2][]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'getIndexes',
    outputs: [
      {
        internalType: 'uint256',
        name: 'OuterIndex',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'InnerIndex',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'newOperator',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: 'assets',
        type: 'address[]',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'admin',
        type: 'address',
      },
    ],
    name: 'isEmergencyAdmin',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'operator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'admin',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    name: 'setEmergencyAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOperator',
        type: 'address',
      },
    ],
    name: 'setOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'val',
        type: 'bool',
      },
    ],
    name: 'setPause',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x60806040526000805534801561001457600080fd5b5061001e33610030565b6034805460ff60a01b19169055610082565b603480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6117e4806100916000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806381119130116100ad578063b3596f0711610071578063b3596f071461027e578063b3ab15fb14610291578063bedb86fb146102a4578063d91a2683146102b7578063f2fde38b146102d757600080fd5b8063811191301461021c5780638da5cb5b14610231578063942acc9814610242578063996f514414610263578063aea321c61461026b57600080fd5b8063570ca735116100f4578063570ca735146101b75780635c975abb146101dc578063715018a6146101ee578063762fb689146101f657806377a24f361461020957600080fd5b80632500f2b61461012657806330b8b2c6146101675780634d0503d41461018f5780634fdd1d4f146101a4575b600080fd5b610152610134366004611156565b6001600160a01b031660009081526036602052604090205460ff1690565b60405190151581526020015b60405180910390f35b61017a610175366004611156565b6102ea565b6040805192835260208301919091520161015e565b6101a261019d366004611181565b610300565b005b6101a26101b236600461137a565b6103c2565b6038546001600160a01b03165b6040516001600160a01b03909116815260200161015e565b603454600160a01b900460ff16610152565b6101a261051b565b61017a610204366004611156565b61052f565b6101a2610217366004611495565b610587565b61022461067e565b60405161015e91906114f3565b6034546001600160a01b03166101c4565b610255610250366004611156565b6106e0565b60405190815260200161015e565b610255600181565b6101a2610279366004611540565b6106f2565b61025561028c366004611156565b610714565b6101a261029f366004611156565b610726565b6101a26102b236600461157d565b6107d6565b6102ca6102c5366004611540565b61085f565b60405161015e9190611598565b6101a26102e5366004611156565b610935565b6000806102f6836109ab565b9094909350915050565b6103086109e3565b6001600160a01b0382166103635760405162461bcd60e51b815260206004820152601860248201527f4e46544f7261636c653a20696e76616c69642061646d696e000000000000000060448201526064015b60405180910390fd5b6001600160a01b038216600081815260366020908152604091829020805460ff191685151590811790915591519182527fd31e6f3e4ff12681638f56ab4792e32b335f90235a708d31e741ee9dac011e91910160405180910390a25050565b6103ca610a3d565b6038546001600160a01b031633146104325760405162461bcd60e51b815260206004820152602560248201527f4e46544f7261636c653a2063616c6c6572206973206e6f7420746865206f70656044820152643930ba37b960d91b606482015260840161035a565b80518251146104835760405162461bcd60e51b815260206004820152601f60248201527f4e46544f7261636c653a206c656e677468206d75737420626520657175616c00604482015260640161035a565b60005b82518110156104dd576104cb8382815181106104a4576104a4611601565b60200260200101518383815181106104be576104be611601565b6020026020010151610a8a565b806104d58161162d565b915050610486565b507f1c66d38ae9bc7add98b6cd4a391e70e47c85b044e97db2074c7bde3849dd329e828260405161050f929190611648565b60405180910390a15050565b6105236109e3565b61052d6000610d9b565b565b6001600160a01b0381166000908152603560205260408120548190816008610558600184611722565b610562919061174f565b90506000610571600884611763565b90508061057c575060085b909590945092505050565b6001805460ff16806105985750303b155b806105a4575060005481115b6106075760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b606482015260840161035a565b60015460ff16158015610626576001805460ff19168117905560008290555b6001600160a01b03841661063957600080fd5b603880546001600160a01b0319166001600160a01b03861617905561065d85610d9b565b61066683610ded565b8015610677576001805460ff191690555b5050505050565b606060378054806020026020016040519081016040528092919081815260200182805480156106d657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116106b8575b5050505050905090565b60006106eb826109ab565b9392505050565b6106fa6109e3565b600081511161070857600080fd5b61071181610ded565b50565b600061071f826109ab565b5092915050565b61072e6109e3565b6001600160a01b0381166107845760405162461bcd60e51b815260206004820152601b60248201527f4e46544f7261636c653a20696e76616c6964206f70657261746f720000000000604482015260640161035a565b603880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f43ecbc1bb0a9bebbcadca5bdaedc649040adb65597772899e25403afb28b679490600090a35050565b3360009081526036602052604090205460ff166108495760405162461bcd60e51b815260206004820152602b60248201527f4e46544f7261636c653a2063616c6c6572206973206e6f742074686520656d6560448201526a3933b2b731bca0b236b4b760a91b606482015260840161035a565b801561085757610711610ed8565b610711610f38565b60606000825167ffffffffffffffff81111561087d5761087d6111b4565b6040519080825280602002602001820160405280156108b657816020015b6108a361111c565b81526020019060019003908161089b5790505b50905060005b835181101561071f576000806108ea8684815181106108dd576108dd611601565b60200260200101516109ab565b9150915060405180604001604052808381526020018281525084848151811061091557610915611601565b60200260200101819052505050808061092d9061162d565b9150506108bc565b61093d6109e3565b6001600160a01b0381166109a25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161035a565b61071181610d9b565b6000806000806109ba85610f74565b90925090506109d461ffff8316662386f26fc10000611777565b9561ffff909116945092505050565b6034546001600160a01b0316331461052d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161035a565b603454600160a01b900460ff161561052d5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161035a565b600060398360328110610a9f57610a9f611601565b01905060005b8251811015610c54576000838281518110610ac257610ac2611601565b602002602001015190506000816040015190506000610af88360000151846020015161ffff1660109190911b63ffff0000161790565b90508160011415610b1b57845463ffffffff191663ffffffff8216178555610c3e565b8160021415610b4757845467ffffffff00000000191664010000000063ffffffff831602178555610c3e565b8160031415610b7157845463ffffffff60401b1916600160401b63ffffffff831602178555610c3e565b8160041415610b9b57845463ffffffff60601b1916600160601b63ffffffff831602178555610c3e565b8160051415610bc557845463ffffffff60801b1916600160801b63ffffffff831602178555610c3e565b8160061415610bef57845463ffffffff60a01b1916600160a01b63ffffffff831602178555610c3e565b8160071415610c1957845463ffffffff60c01b1916600160c01b63ffffffff831602178555610c3e565b8160081415610c3e5784546001600160e01b0316600160e01b63ffffffff8316021785555b5050508080610c4c9061162d565b915050610aa5565b508060398460328110610c6957610c69611601565b82549101805463ffffffff19811663ffffffff938416908117835584546401000000009081900485160267ffffffffffffffff1990921617178082558354600160401b9081900484160263ffffffff60401b198216811783558454600160601b9081900485160263ffffffff60601b199091166fffffffffffffffff00000000000000001990921691909117178082558354600160801b9081900484160263ffffffff60801b198216811783558454600160a01b9081900485160263ffffffff60a01b1990911667ffffffffffffffff60801b1990921691909117178082558354600160c01b9081900484160263ffffffff60c01b198216811783559354600160e01b908190049093169092026001600160e01b039093166001600160c01b0390921691909117919091179055505050565b603480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b603754600090610dfe906001611796565b905060005b8251811015610ed3576000838281518110610e2057610e20611601565b6020026020010151905060356000826001600160a01b03166001600160a01b031681526020019081526020016000205460001415610ec0576001600160a01b03811660008181526035602052604081208590556037805460018101825591527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae0180546001600160a01b031916909117905582610ebc8161162d565b9350505b5080610ecb8161162d565b915050610e03565b505050565b610ee0610a3d565b6034805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f1b3390565b6040516001600160a01b03909116815260200160405180910390a1565b610f406110cc565b6034805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33610f1b565b600080600080610f838561052f565b91509150600060398360328110610f9c57610f9c611601565b6040805161010081018252929091015463ffffffff8082168452640100000000820481166020850152600160401b8204811692840192909252600160601b810482166060840152600160801b810482166080840152600160a01b8104821660a0840152600160c01b8104821660c0840152600160e01b90041660e082015290506000600183141561102f575080516110b7565b8260021415611043575060208101516110b7565b8260031415611057575060408101516110b7565b826004141561106b575060608101516110b7565b826005141561107f575060808101516110b7565b8260061415611093575060a08101516110b7565b82600714156110a7575060c08101516110b7565b82600814156110b7575060e08101515b61ffff601082901c1697909650945050505050565b603454600160a01b900460ff1661052d5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161035a565b60405180604001604052806002906020820280368337509192915050565b80356001600160a01b038116811461115157600080fd5b919050565b60006020828403121561116857600080fd5b6106eb8261113a565b8035801515811461115157600080fd5b6000806040838503121561119457600080fd5b61119d8361113a565b91506111ab60208401611171565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156111ed576111ed6111b4565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561121c5761121c6111b4565b604052919050565b600067ffffffffffffffff82111561123e5761123e6111b4565b5060051b60200190565b803561ffff8116811461115157600080fd5b600082601f83011261126b57600080fd5b8135602061128061127b83611224565b6111f3565b82815260059290921b8401810191818101908684111561129f57600080fd5b8286015b8481101561136f57803567ffffffffffffffff8111156112c35760008081fd5b8701603f810189136112d55760008081fd5b8481013560406112e761127b83611224565b8281526060928302840182019288820191908d8511156113075760008081fd5b948301945b8486101561135d5780868f0312156113245760008081fd5b61132c6111ca565b61133587611248565b81526113428b8801611248565b818c015286850135858201528352948501949189019161130c565b508752505050928401925083016112a3565b509695505050505050565b6000806040838503121561138d57600080fd5b823567ffffffffffffffff808211156113a557600080fd5b818501915085601f8301126113b957600080fd5b813560206113c961127b83611224565b82815260059290921b840181019181810190898411156113e857600080fd5b948201945b83861015611406578535825294820194908201906113ed565b9650508601359250508082111561141c57600080fd5b506114298582860161125a565b9150509250929050565b600082601f83011261144457600080fd5b8135602061145461127b83611224565b82815260059290921b8401810191818101908684111561147357600080fd5b8286015b8481101561136f576114888161113a565b8352918301918301611477565b6000806000606084860312156114aa57600080fd5b6114b38461113a565b92506114c16020850161113a565b9150604084013567ffffffffffffffff8111156114dd57600080fd5b6114e986828701611433565b9150509250925092565b6020808252825182820181905260009190848201906040850190845b818110156115345783516001600160a01b03168352928401929184019160010161150f565b50909695505050505050565b60006020828403121561155257600080fd5b813567ffffffffffffffff81111561156957600080fd5b61157584828501611433565b949350505050565b60006020828403121561158f57600080fd5b6106eb82611171565b60208082528251828201819052600091906040908185019086840185805b838110156115f357825185835b60028110156115e0578251825291890191908901906001016115c3565b50505093850193918601916001016115b6565b509298975050505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561164157611641611617565b5060010190565b6040808252835182820181905260009190606090818501906020808901865b8381101561168357815185529382019390820190600101611667565b50508683038188015287518084528184019250600581901b8401820189830160005b8381101561171157868303601f1901865281518051808552908601908685019060005b818110156116fc578351805161ffff90811685528a820151168a8501528d01518d84015292880192918b01916001016116c8565b505096860196935050908401906001016116a5565b50909b9a5050505050505050505050565b60008282101561173457611734611617565b500390565b634e487b7160e01b600052601260045260246000fd5b60008261175e5761175e611739565b500490565b60008261177257611772611739565b500690565b600081600019048311821515161561179157611791611617565b500290565b600082198211156117a9576117a9611617565b50019056fea2646970667358221220e5886eb14f51d2c08914c86226fa0a774c8406b200b479485cdcd06d16af047864736f6c63430008090033'

type NFTOracleConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: NFTOracleConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1

export class NFTOracle__factory extends ContractFactory {
  constructor(...args: NFTOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<NFTOracle> {
    return super.deploy(overrides || {}) as Promise<NFTOracle>
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): NFTOracle {
    return super.attach(address) as NFTOracle
  }
  override connect(signer: Signer): NFTOracle__factory {
    return super.connect(signer) as NFTOracle__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): NFTOracleInterface {
    return new utils.Interface(_abi) as NFTOracleInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFTOracle {
    return new Contract(address, _abi, signerOrProvider) as NFTOracle
  }
}
