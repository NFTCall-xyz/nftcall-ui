/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import { Contract, ContractFactory, Overrides, Signer, utils } from 'ethers'

import type { PromiseOrValue } from '../../common'
import type { NFTOracle, NFTOracleInterface } from '../../contracts/NFTOracle'

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'oldOperator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOperator',
        type: 'address',
      },
    ],
    name: 'ChangeOperator',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'oldAsset',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newAsset',
        type: 'address',
      },
    ],
    name: 'ReplaceAsset',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256[]',
        name: 'indexes',
        type: 'uint256[]',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'price',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'vol',
            type: 'uint16',
          },
          {
            internalType: 'uint256',
            name: 'index',
            type: 'uint256',
          },
        ],
        indexed: false,
        internalType: 'struct NFTOracle.UpdateInput[][]',
        name: 'inputs',
        type: 'tuple[][]',
      },
    ],
    name: 'SetAssetData',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'admin',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    name: 'SetEmergencyAdmin',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [] as any,
    name: 'ORACLE_REVISION',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'assets',
        type: 'address[]',
      },
    ],
    name: 'addAssets',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: 'indexes',
        type: 'uint256[]',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'price',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'vol',
            type: 'uint16',
          },
          {
            internalType: 'uint256',
            name: 'index',
            type: 'uint256',
          },
        ],
        internalType: 'struct NFTOracle.UpdateInput[][]',
        name: 'inputs',
        type: 'tuple[][]',
      },
    ],
    name: 'batchSetAssetPrice',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'getAddressList',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'getAsset',
    outputs: [
      {
        internalType: 'uint256',
        name: 'price',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'vol',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'getAssetPrice',
    outputs: [
      {
        internalType: 'uint256',
        name: 'price',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'getAssetVol',
    outputs: [
      {
        internalType: 'uint256',
        name: 'vol',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'assets',
        type: 'address[]',
      },
    ],
    name: 'getAssets',
    outputs: [
      {
        internalType: 'uint256[2][]',
        name: 'prices',
        type: 'uint256[2][]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'getIndexes',
    outputs: [
      {
        internalType: 'uint256',
        name: 'OuterIndex',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'InnerIndex',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'newOperator',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: 'assets',
        type: 'address[]',
      },
    ],
    name: 'initialize',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'admin',
        type: 'address',
      },
    ],
    name: 'isEmergencyAdmin',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'operator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'paused',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [] as any,
    name: 'renounceOwnership',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'oldAsset',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'newAsset',
        type: 'address',
      },
    ],
    name: 'replaceAsset',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'admin',
        type: 'address',
      },
      {
        internalType: 'bool',
        name: 'enabled',
        type: 'bool',
      },
    ],
    name: 'setEmergencyAdmin',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOperator',
        type: 'address',
      },
    ],
    name: 'setOperator',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'val',
        type: 'bool',
      },
    ],
    name: 'setPause',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [] as any,
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x60806040526000805534801561001457600080fd5b5061001e33610030565b6034805460ff60a01b19169055610082565b603480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611919806100916000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806381119130116100ad578063b3596f0711610071578063b3596f071461029c578063b3ab15fb146102af578063bedb86fb146102c2578063d91a2683146102d5578063f2fde38b146102f557600080fd5b8063811191301461023a5780638da5cb5b1461024f578063942acc9814610260578063996f514414610281578063aea321c61461028957600080fd5b8063570ca735116100f4578063570ca735146101d55780635c975abb146101fa578063715018a61461020c578063762fb6891461021457806377a24f361461022757600080fd5b80632500f2b61461013157806330b8b2c614610172578063467d15891461019a5780634d0503d4146101af5780634fdd1d4f146101c2575b600080fd5b61015d61013f366004611261565b6001600160a01b031660009081526036602052604090205460ff1690565b60405190151581526020015b60405180910390f35b610185610180366004611261565b610308565b60408051928352602083019190915201610169565b6101ad6101a836600461127c565b61031e565b005b6101ad6101bd3660046112bf565b610405565b6101ad6101d03660046114af565b6104c2565b6038546001600160a01b03165b6040516001600160a01b039091168152602001610169565b603454600160a01b900460ff1661015d565b6101ad61061b565b610185610222366004611261565b61062f565b6101ad6102353660046115ca565b610687565b61024261077e565b6040516101699190611628565b6034546001600160a01b03166101e2565b61027361026e366004611261565b6107e0565b604051908152602001610169565b610273600181565b6101ad610297366004611675565b6107f2565b6102736102aa366004611261565b610814565b6101ad6102bd366004611261565b610826565b6101ad6102d03660046116b2565b6108d6565b6102e86102e3366004611675565b61095f565b60405161016991906116cd565b6101ad610303366004611261565b610a35565b60008061031483610aab565b9094909350915050565b610326610aee565b6001600160a01b038216600090815260356020526040902054806103915760405162461bcd60e51b815260206004820152601860248201527f4e46544f7261636c653a20696e76616c696420696e646578000000000000000060448201526064015b60405180910390fd5b81603761039f60018461174c565b815481106103af576103af611763565b6000918252602082200180546001600160a01b0319166001600160a01b03938416179055604051848316928616917f08368c387c392d24899e2cf8c0830f3c9a3f03734e5032d68f5eac8c19042db991a3505050565b61040d610aee565b6001600160a01b0382166104635760405162461bcd60e51b815260206004820152601860248201527f4e46544f7261636c653a20696e76616c69642061646d696e00000000000000006044820152606401610388565b6001600160a01b038216600081815260366020908152604091829020805460ff191685151590811790915591519182527fd31e6f3e4ff12681638f56ab4792e32b335f90235a708d31e741ee9dac011e91910160405180910390a25050565b6104ca610b48565b6038546001600160a01b031633146105325760405162461bcd60e51b815260206004820152602560248201527f4e46544f7261636c653a2063616c6c6572206973206e6f7420746865206f70656044820152643930ba37b960d91b6064820152608401610388565b80518251146105835760405162461bcd60e51b815260206004820152601f60248201527f4e46544f7261636c653a206c656e677468206d75737420626520657175616c006044820152606401610388565b60005b82518110156105dd576105cb8382815181106105a4576105a4611763565b60200260200101518383815181106105be576105be611763565b6020026020010151610b95565b806105d581611779565b915050610586565b507f1c66d38ae9bc7add98b6cd4a391e70e47c85b044e97db2074c7bde3849dd329e828260405161060f929190611794565b60405180910390a15050565b610623610aee565b61062d6000610ea6565b565b6001600160a01b038116600090815260356020526040812054819081600861065860018461174c565b6106629190611884565b90506000610671600884611898565b90508061067c575060085b909590945092505050565b6001805460ff16806106985750303b155b806106a4575060005481115b6107075760405162461bcd60e51b815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201526d195b881a5b9a5d1a585b1a5e995960921b6064820152608401610388565b60015460ff16158015610726576001805460ff19168117905560008290555b6001600160a01b03841661073957600080fd5b603880546001600160a01b0319166001600160a01b03861617905561075d85610ea6565b61076683610ef8565b8015610777576001805460ff191690555b5050505050565b606060378054806020026020016040519081016040528092919081815260200182805480156107d657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116107b8575b5050505050905090565b60006107eb82610aab565b9392505050565b6107fa610aee565b600081511161080857600080fd5b61081181610ef8565b50565b600061081f82610aab565b5092915050565b61082e610aee565b6001600160a01b0381166108845760405162461bcd60e51b815260206004820152601b60248201527f4e46544f7261636c653a20696e76616c6964206f70657261746f7200000000006044820152606401610388565b603880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f43ecbc1bb0a9bebbcadca5bdaedc649040adb65597772899e25403afb28b679490600090a35050565b3360009081526036602052604090205460ff166109495760405162461bcd60e51b815260206004820152602b60248201527f4e46544f7261636c653a2063616c6c6572206973206e6f742074686520656d6560448201526a3933b2b731bca0b236b4b760a91b6064820152608401610388565b801561095757610811610fe3565b610811611043565b60606000825167ffffffffffffffff81111561097d5761097d6112e9565b6040519080825280602002602001820160405280156109b657816020015b6109a3611227565b81526020019060019003908161099b5790505b50905060005b835181101561081f576000806109ea8684815181106109dd576109dd611763565b6020026020010151610aab565b91509150604051806040016040528083815260200182815250848481518110610a1557610a15611763565b602002602001018190525050508080610a2d90611779565b9150506109bc565b610a3d610aee565b6001600160a01b038116610aa25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610388565b61081181610ea6565b600080600080610aba8561107f565b9092509050610ad461ffff8316662386f26fc100006118ac565b9350610ae561ffff8216600a6118ac565b92505050915091565b6034546001600160a01b0316331461062d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610388565b603454600160a01b900460ff161561062d5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610388565b600060398360328110610baa57610baa611763565b01905060005b8251811015610d5f576000838281518110610bcd57610bcd611763565b602002602001015190506000816040015190506000610c038360000151846020015161ffff1660109190911b63ffff0000161790565b90508160011415610c2657845463ffffffff191663ffffffff8216178555610d49565b8160021415610c5257845467ffffffff00000000191664010000000063ffffffff831602178555610d49565b8160031415610c7c57845463ffffffff60401b1916600160401b63ffffffff831602178555610d49565b8160041415610ca657845463ffffffff60601b1916600160601b63ffffffff831602178555610d49565b8160051415610cd057845463ffffffff60801b1916600160801b63ffffffff831602178555610d49565b8160061415610cfa57845463ffffffff60a01b1916600160a01b63ffffffff831602178555610d49565b8160071415610d2457845463ffffffff60c01b1916600160c01b63ffffffff831602178555610d49565b8160081415610d495784546001600160e01b0316600160e01b63ffffffff8316021785555b5050508080610d5790611779565b915050610bb0565b508060398460328110610d7457610d74611763565b82549101805463ffffffff19811663ffffffff938416908117835584546401000000009081900485160267ffffffffffffffff1990921617178082558354600160401b9081900484160263ffffffff60401b198216811783558454600160601b9081900485160263ffffffff60601b199091166fffffffffffffffff00000000000000001990921691909117178082558354600160801b9081900484160263ffffffff60801b198216811783558454600160a01b9081900485160263ffffffff60a01b1990911667ffffffffffffffff60801b1990921691909117178082558354600160c01b9081900484160263ffffffff60c01b198216811783559354600160e01b908190049093169092026001600160e01b039093166001600160c01b0390921691909117919091179055505050565b603480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b603754600090610f099060016118cb565b905060005b8251811015610fde576000838281518110610f2b57610f2b611763565b6020026020010151905060356000826001600160a01b03166001600160a01b031681526020019081526020016000205460001415610fcb576001600160a01b03811660008181526035602052604081208590556037805460018101825591527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae0180546001600160a01b031916909117905582610fc781611779565b9350505b5080610fd681611779565b915050610f0e565b505050565b610feb610b48565b6034805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110263390565b6040516001600160a01b03909116815260200160405180910390a1565b61104b6111d7565b6034805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33611026565b60008060008061108e8561062f565b915091506000603983603281106110a7576110a7611763565b6040805161010081018252929091015463ffffffff8082168452640100000000820481166020850152600160401b8204811692840192909252600160601b810482166060840152600160801b810482166080840152600160a01b8104821660a0840152600160c01b8104821660c0840152600160e01b90041660e082015290506000600183141561113a575080516111c2565b826002141561114e575060208101516111c2565b8260031415611162575060408101516111c2565b8260041415611176575060608101516111c2565b826005141561118a575060808101516111c2565b826006141561119e575060a08101516111c2565b82600714156111b2575060c08101516111c2565b82600814156111c2575060e08101515b61ffff601082901c1697909650945050505050565b603454600160a01b900460ff1661062d5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610388565b60405180604001604052806002906020820280368337509192915050565b80356001600160a01b038116811461125c57600080fd5b919050565b60006020828403121561127357600080fd5b6107eb82611245565b6000806040838503121561128f57600080fd5b61129883611245565b91506112a660208401611245565b90509250929050565b8035801515811461125c57600080fd5b600080604083850312156112d257600080fd5b6112db83611245565b91506112a6602084016112af565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611322576113226112e9565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611351576113516112e9565b604052919050565b600067ffffffffffffffff821115611373576113736112e9565b5060051b60200190565b803561ffff8116811461125c57600080fd5b600082601f8301126113a057600080fd5b813560206113b56113b083611359565b611328565b82815260059290921b840181019181810190868411156113d457600080fd5b8286015b848110156114a457803567ffffffffffffffff8111156113f85760008081fd5b8701603f8101891361140a5760008081fd5b84810135604061141c6113b083611359565b8281526060928302840182019288820191908d85111561143c5760008081fd5b948301945b848610156114925780868f0312156114595760008081fd5b6114616112ff565b61146a8761137d565b81526114778b880161137d565b818c0152868501358582015283529485019491890191611441565b508752505050928401925083016113d8565b509695505050505050565b600080604083850312156114c257600080fd5b823567ffffffffffffffff808211156114da57600080fd5b818501915085601f8301126114ee57600080fd5b813560206114fe6113b083611359565b82815260059290921b8401810191818101908984111561151d57600080fd5b948201945b8386101561153b57853582529482019490820190611522565b9650508601359250508082111561155157600080fd5b5061155e8582860161138f565b9150509250929050565b600082601f83011261157957600080fd5b813560206115896113b083611359565b82815260059290921b840181019181810190868411156115a857600080fd5b8286015b848110156114a4576115bd81611245565b83529183019183016115ac565b6000806000606084860312156115df57600080fd5b6115e884611245565b92506115f660208501611245565b9150604084013567ffffffffffffffff81111561161257600080fd5b61161e86828701611568565b9150509250925092565b6020808252825182820181905260009190848201906040850190845b818110156116695783516001600160a01b031683529284019291840191600101611644565b50909695505050505050565b60006020828403121561168757600080fd5b813567ffffffffffffffff81111561169e57600080fd5b6116aa84828501611568565b949350505050565b6000602082840312156116c457600080fd5b6107eb826112af565b60208082528251828201819052600091906040908185019086840185805b8381101561172857825185835b6002811015611715578251825291890191908901906001016116f8565b50505093850193918601916001016116eb565b509298975050505050505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561175e5761175e611736565b500390565b634e487b7160e01b600052603260045260246000fd5b600060001982141561178d5761178d611736565b5060010190565b6040808252835182820181905260009190606090818501906020808901865b838110156117cf578151855293820193908201906001016117b3565b50508683038188015287518084528184019250600581901b8401820189830160005b8381101561185d57868303601f1901865281518051808552908601908685019060005b81811015611848578351805161ffff90811685528a820151168a8501528d01518d84015292880192918b0191600101611814565b505096860196935050908401906001016117f1565b50909b9a5050505050505050505050565b634e487b7160e01b600052601260045260246000fd5b6000826118935761189361186e565b500490565b6000826118a7576118a761186e565b500690565b60008160001904831182151516156118c6576118c6611736565b500290565b600082198211156118de576118de611736565b50019056fea2646970667358221220803c0e71da9442397caa3c77343dbc51e01c38e83dde90a4193d66f5e2f478ee64736f6c63430008090033'

type NFTOracleConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: NFTOracleConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1

export class NFTOracle__factory extends ContractFactory {
  constructor(...args: NFTOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<NFTOracle> {
    return super.deploy(overrides || {}) as Promise<NFTOracle>
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): NFTOracle {
    return super.attach(address) as NFTOracle
  }
  override connect(signer: Signer): NFTOracle__factory {
    return super.connect(signer) as NFTOracle__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): NFTOracleInterface {
    return new utils.Interface(_abi) as NFTOracleInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFTOracle {
    return new Contract(address, _abi, signerOrProvider) as NFTOracle
  }
}
